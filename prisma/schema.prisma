generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model user {
  id                       Int                  @id @default(autoincrement())
  email                    String?              @db.VarChar(255)
  first_name               String               @db.VarChar(255)
  last_name                String               @db.VarChar(255)
  mobile_number            String?              @db.VarChar(11)
  profile_image            String?              @db.VarChar(255)
  passport_image           String?              @db.VarChar(255)
  is_login                 Int                  @default(0)
  reset_token              String?              @db.VarChar(255)
  reset_token_expires_at   DateTime?            @db.DateTime
  is_validated             Int?                 @db.Int
  otp_verification_code    Int?                 @db.Int
  email_verification_token String?              @db.VarChar(255)
  password                 String               @db.VarChar(255)
  role_id                  Int                  @db.Int
  role                     role                 @relation(fields: [role_id], references: [id])
  office_id                Int                  @db.Int
  office                   office               @relation(fields: [office_id], references: [id])
  gender_id                Int                  @db.Int
  gender                   gender               @relation(fields: [gender_id], references: [id])
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
}

model role {
  id                       Int                  @id @default(autoincrement())
  name                     String               @db.VarChar(255)
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  user                     user[]
}

model office {
  id                       Int                  @id @default(autoincrement())
  office_name              String               @db.VarChar(255)
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  user                     user[]
  token                    token[]
  counter                  counter[]
}

model gender {
  id                       Int                  @id @default(autoincrement())
  name                     String               @db.VarChar(255)
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  user                     user[]
  token                    token[]
}

model services {
  id                       Int                  @id @default(autoincrement())
  title                     String               @db.VarChar(255)
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  token                    token[]
}
model queue_services {
  id                       Int                  @id @default(autoincrement())
  name                     String               @db.VarChar(255)
  color                    String               @db.VarChar(255)
  slug                     String?              @db.VarChar(255)
  route                    String?              @db.VarChar(255)
  icon                     String?              @db.VarChar(255)
  fields                   Json?                @db.Json
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
}

model priority {
  id                       Int                  @id @default(autoincrement())
  name                     String               @db.VarChar(255)
  short_name               String               @db.VarChar(255)
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  token                    token[]
}

model status {
  id                       Int                  @id @default(autoincrement())
  name                     String               @db.VarChar(255)
  status                   Int                  @default(1)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  token                    token[]
}

model counter {
  id                       Int                  @id @default(autoincrement())
  title                    String               @db.VarChar(255)
  counter_number           String               @db.VarChar(255)
  office_id                Int                  @db.Int
  status                   Int                  @default(0)
  user_id                  Int?                 @db.Int
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  office                   office               @relation(fields: [office_id], references: [id])
  token                    token[]
}

model token {
  id                       Int                  @id @default(autoincrement())
  name                     String               @db.VarChar(255)
  email                    String               @db.VarChar(255)
  mobile                   String               @db.VarChar(11)
  gender_id                Int                  @db.Int
  service_id               Int                  @db.Int
  priority_id              Int                  @db.Int
  office_id                Int                  @db.Int
  status                   status?              @relation(fields: [status_id], references: [id])
  token                    String               @db.VarChar(255)
  status_id                Int                  @db.Int
  counter_number           Int?                 @db.Int
  counter_id               Int?                 @db.Int
  user_id                  Int?                 @db.Int
  duration                 String?              @db.VarChar(255)
  remarks                  String?              @db.VarChar(255)
  created_at               DateTime?            @db.DateTime
  updated_at               DateTime?            @db.DateTime
  gender                   gender?              @relation(fields: [gender_id], references: [id])
  service                  services?            @relation(fields: [service_id], references: [id])
  priority                 priority?            @relation(fields: [priority_id], references: [id])
  office                   office?              @relation(fields: [office_id], references: [id])
  counter                  counter?             @relation(fields: [counter_id], references: [id])
}
